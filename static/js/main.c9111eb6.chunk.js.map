{"version":3,"sources":["Navigation.js","Ratespage.js","Historic.js","components/Rates.js","components/LineChart.js","components/BarGraph.js","components/OpenChart.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","props","navStyle","color","textDecoration","border","useState","isOpen","setIsOpen","className","Navbar","bg","variant","expand","NavbarBrand","style","href","NavbarToggler","id","onClick","aria-controls","aria-label","Collapse","navbar","Nav","NavItem","NavLink","tableStyle","headStyle","fontWeight","buttonstyle","backgroundColor","Ratespage","selectHandler","event","target","name","setState","fromCurrency","value","convertHandler","axios","get","state","then","response","currencyrates","currencycountry","invcurrency","key","data","rates","push","toFixed","invcurrencies","catch","err","console","log","cur","cname","csymbol","countries","res","e","length","currencies","t","code","symbol","ccountry","from","currency","this","display","justifyContent","alignItems","fontSize","padding","Table","borderless","map","for","onChange","aria-required","class","React","Component","Historic","context","date","month_num","d","toString","split","month","i","Cdate","Date","weekNumbers","maxDate","Rates","setcurrencies","setcurrencyrates","useEffect","prop","top10","currencyfrom","getrates","responsive","BarChartComponent","OneYearClose","currencyto","today","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","close_rates","date1","Object","keys","filter","obj","temp","date2","year","values","Data","labels","datasets","label","fill","lineTension","borderColor","borderCapStyle","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","componentDidMount","OneWeekClose","dates","close_rate","OnedayClose","prevProps","options","scales","xAxes","yAxes","legend","fontColor","BarGraph","Nyears","distinctyears","months","Set","years","toLocaleString","hoverBackgroundColor","borderWidth","foryear","cyear","object","property","width","height","gridLines","offsetGridLines","OpenChart","open_rates","Home","toCurrency","rate","invrate","result","amount","cinvrate","crate","to","error","message","currency_names","amt","currencyAr","role","type","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c9111eb6.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavItem, NavLink, Collapse,\r\n  NavbarToggler } from \"reactstrap\";\r\nimport \"./Navigation.css\";\r\n\r\n\r\nconst Navigation = (props) => {\r\n  const navStyle = {\r\n    color: \"#1C4E80\",\r\n    textDecoration: 'none',\r\n    border:\"none\"\r\n    \r\n  };\r\n  \r\n  const [isOpen, setIsOpen] = useState(false);\r\n  \r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  const headStyle = {\r\n    color: \"#1C4E80\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n            <Navbar\r\n              bg=\"dark\"\r\n              variant=\"dark\"\r\n              expand=\"md\"\r\n            >\r\n              <NavbarBrand style={headStyle} className=\"Brand\" href=\"/CS510_FrontEnd_Final_Project#/\">\r\n                <h2><b>X-rates Dash</b></h2>\r\n              </NavbarBrand>\r\n              <NavbarToggler id=\"toggle\" onClick={toggle} aria-controls=\"basic-navbar-nav\" \r\n              aria-label=\"Toggle navigation\">\r\n              &#x290A;</NavbarToggler>\r\n             \r\n              <Collapse isOpen={isOpen} navbar>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem className=\"d-flex align-items-center\">\r\n                  <NavLink className=\"font-weight-bold\" href=\"/CS510_FrontEnd_Final_Project/#/Ratespage\" style={navStyle}> \r\n                  Rates Table   \r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem className=\"d-flex align-items-center\">\r\n                  <NavLink className=\"font-weight-bold\" href=\"/CS510_FrontEnd_Final_Project/#/Historic\" style={navStyle}>\r\n                      Historic Lookup\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              </Collapse>\r\n            </Navbar>\r\n        </div>\r\n       \r\n  );\r\n};\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport { Table } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport \"./Ratespage.css\";\r\n\r\nconst tableStyle = {\r\n  color: \"black\",\r\n};\r\n\r\nconst headStyle = {\r\n  color: \"#1C4E80\",\r\n  fontWeight: \"bold\",\r\n};\r\n\r\nconst buttonstyle = {\r\n  backgroundColor: \"#1C4E80\",\r\n  color: \"white\",\r\n  border: \"1px double #1C4E80\",\r\n};\r\n\r\nclass Ratespage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fromCurrency: \"USD\",\r\n      currencies: [],\r\n      currency: [],\r\n      currencyrates: [],\r\n      invcurrencies: [],\r\n      cname: null,\r\n      ccountry: null,\r\n      csymbol: null,\r\n      from: \"USD\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        `https://api.exchangeratesapi.io/latest?base=${this.state.fromCurrency}`\r\n      )\r\n      .then((response) => {\r\n        const currencyrates = [];\r\n        const currencycountry = [];\r\n        const currency = [];\r\n        const invcurrency = [];\r\n        \r\n        for (const key in response.data.rates) {\r\n          currency.push(key);\r\n          if (key == this.state.fromCurrency) continue;\r\n          currencycountry.push(key);\r\n          currencyrates.push(response.data.rates[key].toFixed(5));\r\n          axios\r\n            .get(\r\n              `https://api.exchangeratesapi.io/latest?base=${key}`\r\n            )\r\n            .then((response) => {\r\n              if (key != this.state.fromCurrency)\r\n                invcurrency.push(\r\n                  response.data.rates[this.state.fromCurrency].toFixed(5)\r\n                );\r\n              this.setState({ invcurrencies: invcurrency });\r\n            })\r\n            .catch((err) => {\r\n              console.log(\"oops\", err);\r\n            });\r\n        }\r\n        axios\r\n          .get(\r\n            \"https://restcountries.eu/rest/v2/all?fields=currencies;name;flag;\"\r\n          )\r\n          .then((response) => {\r\n            var cur;\r\n            var cname = null;\r\n            var csymbol = null;\r\n            var countries = [];\r\n            var res = response.data;\r\n            for (var e = 0; e < res.length; e++) {\r\n              cur = res[e].currencies;\r\n              for (var t = 0; t < cur.length; t++) {\r\n                if (cur[t].code == this.state.fromCurrency) {\r\n                  cname = cur[t].name;\r\n                  csymbol = cur[t].symbol;\r\n                  countries.push(res[e].name);\r\n                  countries.push(\", \");\r\n                }\r\n              }\r\n            }\r\n            this.setState({ cname: cname });\r\n            this.setState({ csymbol: csymbol });\r\n            this.setState({ ccountry: countries });\r\n          });\r\n        this.setState({ currencies: currencycountry });\r\n        this.setState({ currencyrates: currencyrates });\r\n        this.setState({ currency: currency });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"oops\", err);\r\n      });\r\n  }\r\n\r\n  selectHandler = (event) => {\r\n    if (event.target.name === \"from\") {\r\n      this.setState({ fromCurrency: event.target.value });\r\n    }\r\n  };\r\n\r\n  convertHandler = () => {\r\n    axios\r\n      .get(\r\n        `https://api.exchangeratesapi.io/latest?base=${this.state.fromCurrency}`\r\n      )\r\n      .then((response) => {\r\n        const currencyrates = [];\r\n        const currencycountry = [];\r\n        const invcurrency = [];\r\n        for (const key in response.data.rates) {\r\n          if (key == this.state.fromCurrency) continue;\r\n          currencycountry.push(key);\r\n          currencyrates.push(response.data.rates[key].toFixed(5));\r\n          axios\r\n            .get(\r\n              `https://api.exchangeratesapi.io/latest?base=${key}`\r\n            )\r\n            .then((response) => {\r\n              invcurrency.push(\r\n                response.data.rates[this.state.fromCurrency].toFixed(5)\r\n              );\r\n              this.setState({ invcurrencies: invcurrency });\r\n            })\r\n            .catch((err) => {\r\n              console.log(\"oops\", err);\r\n            });\r\n        }\r\n        axios\r\n          .get(\r\n            \"https://restcountries.eu/rest/v2/all?fields=currencies;name;\"\r\n          )\r\n          .then((response) => {\r\n            var cur;\r\n            var cname = null;\r\n            var csymbol = null;\r\n            var countries = [];\r\n            var res = response.data;\r\n            for (var e = 0; e < res.length; e++) {\r\n              cur = res[e].currencies;\r\n              for (var t = 0; t < cur.length; t++) {\r\n                if (cur[t].code == this.state.fromCurrency) {\r\n                  cname = cur[t].name;\r\n                  csymbol = cur[t].symbol;\r\n                  countries.push(res[e].name);\r\n                  countries.push(\", \");\r\n                }\r\n              }\r\n            }\r\n            this.setState({ cname: cname });\r\n            this.setState({ csymbol: csymbol });\r\n            this.setState({ ccountry: countries });\r\n          });\r\n        this.setState({ currencies: currencycountry });\r\n        this.setState({ currencyrates: currencyrates });\r\n        this.setState({ from: this.state.fromCurrency });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"oops\", err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container \">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-12 col-xl-12 marqueeEffect\"  style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          color: \"#1C4E80\",\r\n          fontWeight: \"bold\",\r\n          fontSize: \"1.5rem\",\r\n          padding: \"0.5rem\"\r\n        }}>\r\n        <p\r\n >Exchange Rates Table </p>\r\n        </div>\r\n        \r\n      \r\n          <div className=\"col-lg-6 col-xl-6 \">\r\n            <Table borderless>\r\n              <thead>\r\n                <tr>\r\n                  <th style={headStyle}>{this.state.from}</th>\r\n                  <th style={headStyle}>1.00 {this.state.from}</th>\r\n                  <th style={headStyle}>inv. 1.00 {this.state.from}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td style={tableStyle}>\r\n                    {this.state.currencies.map((cur) => (\r\n                      <tr>{cur}</tr>\r\n                    ))}\r\n                  </td>\r\n                  <td style={tableStyle}>\r\n                    {this.state.currencyrates.map((cur) => (\r\n                      <tr>{cur}</tr>\r\n                    ))}\r\n                  </td>\r\n                  <td style={tableStyle}>\r\n                    {this.state.invcurrencies.map((cur) => (\r\n                      <tr>{cur}</tr>\r\n                    ))}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n          <div className=\"col-lg-6 col-xl-6 ratepag\">\r\n            <div className=\"currency_row\">\r\n              <div className=\"col-lg-12 col-xl-12\">\r\n                <br></br>\r\n                <center>\r\n                  <h5><label for=\"from\">Choose the currency</label></h5>\r\n                  <select\r\n                    name=\"from\"\r\n                    id=\"from\"\r\n                    onChange={(event) => this.selectHandler(event)}\r\n                    value={this.state.fromCurrency}\r\n                    aria-required=\"true\"\r\n                  >\r\n                    {this.state.currency.map((cur) => (\r\n                      <option key={cur}>{cur}</option>\r\n                    ))}\r\n                  </select>\r\n                  <br></br>\r\n                  <br></br>\r\n                  \r\n                  <button onClick={this.convertHandler} style={buttonstyle}>Go</button>\r\n                  <br></br>\r\n                </center>\r\n              </div>\r\n            </div>\r\n            <div className=\"facts_row\">\r\n              <div className=\"col-lg-12 col-xl-12\">\r\n                <br></br>\r\n                <center>\r\n                  <h5>Currency Facts</h5>\r\n                </center>\r\n                <br></br>\r\n                <p>\r\n                  <b>Name :</b> {this.state.cname}\r\n                </p>\r\n                <p>\r\n                  <b>Symbol :</b> {this.state.csymbol}\r\n                </p>\r\n                <p>\r\n                  <b>Code :</b> {this.state.fromCurrency}\r\n                </p>\r\n                <p>\r\n                  <b>Users :</b> {this.state.ccountry}\r\n                </p>\r\n                <br></br>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <footer class=\"page-footer footer font-small\">\r\n          © 2020 All rights reserved\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ratespage;","import React from \"react\";\r\nimport { Table } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"./Historic.css\";\r\nimport \"./App.css\"\r\n\r\nconst tableStyle = {\r\n  color: \"black\",\r\n};\r\n\r\nconst headStyle = {\r\n  color: \"#1C4E80\",\r\n  fontWeight: \"bold\",\r\n\r\n};\r\n\r\n\r\nconst buttonstyle = {\r\n  backgroundColor: \"#1C4E80\",\r\n  color: \"white\",\r\n  border: \"1px double #1C4E80\",\r\n};\r\n\r\nclass Historic extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      fromCurrency: \"USD\",\r\n      currencies: [],\r\n      currency: [],\r\n      currencyrates: [],\r\n      invcurrencies: [],\r\n      date: new Date(),\r\n      from: \"USD\",\r\n    };\r\n  }\r\n\r\n  onChange = (date) => this.setState({ date });\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        `https://api.exchangeratesapi.io/latest?base=${this.state.fromCurrency}`\r\n      )\r\n      .then((response) => {\r\n        const currencyrates = [];\r\n        const currencycountry = [];\r\n        const currency = [];\r\n        const invcurrency = [];\r\n        \r\n        for (const key in response.data.rates) {\r\n          currency.push(key);\r\n          if (key == this.state.fromCurrency) continue;\r\n          currencycountry.push(key);\r\n          currencyrates.push(response.data.rates[key].toFixed(5));\r\n          axios\r\n            .get(\r\n              `https://api.exchangeratesapi.io/latest?base=${key}`\r\n            )\r\n            .then((response) => {\r\n              if (key != this.state.fromCurrency)\r\n                invcurrency.push(\r\n                  response.data.rates[this.state.fromCurrency].toFixed(5)\r\n                );\r\n              this.setState({ invcurrencies: invcurrency });\r\n            })\r\n            .catch((err) => {\r\n              console.log(\"oops\", err);\r\n            });\r\n        }\r\n        this.setState({ currencies: currencycountry });\r\n        this.setState({ currencyrates: currencyrates });\r\n        this.setState({ currency: currency });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"oops\", err);\r\n      });\r\n  }\r\n\r\n  selectHandler = (event) => {\r\n    if (event.target.name === \"from\") {\r\n      this.setState({ fromCurrency: event.target.value });\r\n    }\r\n  };\r\n\r\n  convertHandler = () => {\r\n    var d = this.state.date.toString().split(\" \");\r\n    var month_num;\r\n    var month = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n\r\n    for (var i = 0; i < 12; i++) {\r\n      if (d[1] == month[i]) {\r\n        month_num = i + 1;\r\n      }\r\n    }\r\n    \r\n    var Cdate = d[3] + \"-\" + month_num + \"-\" + d[2];\r\n    axios\r\n      .get(\r\n        `https://api.exchangeratesapi.io/${Cdate}?base=${this.state.fromCurrency}`\r\n      )\r\n      .then((response) => {\r\n        const currencyrates = [];\r\n        const currencycountry = [];\r\n        const invcurrency = [];\r\n        for (const key in response.data.rates) {\r\n          if (key == this.state.fromCurrency) continue;\r\n          currencycountry.push(key);\r\n          currencyrates.push(response.data.rates[key].toFixed(5));\r\n          axios\r\n            .get(\r\n              `https://api.exchangeratesapi.io/${Cdate}?base=${key}`\r\n            )\r\n            .then((response) => {\r\n              if (key != this.state.fromCurrency)\r\n                invcurrency.push(\r\n                  response.data.rates[this.state.fromCurrency].toFixed(5)\r\n                );\r\n              this.setState({ invcurrencies: invcurrency });\r\n            })\r\n            .catch((err) => {\r\n              console.log(\"oops\", err);\r\n            });\r\n        }\r\n        this.setState({ currencies: currencycountry });\r\n        this.setState({ currencyrates: currencyrates });\r\n        this.setState({ from: this.state.fromCurrency });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"oops\", err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        \r\n        <div className=\"row\">\r\n        <div className=\"col-lg-12 col-xl-12 marqueeEffect\"  style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          color: \"#1C4E80\",\r\n          fontWeight: \"bold\",\r\n          fontSize: \"1.5rem\",\r\n          padding: \"0.5rem\"\r\n        }}>\r\n        <p\r\n >Historic Lookup Table </p>\r\n        </div>\r\n          <div className=\"col-lg-6 col-xl-6\">\r\n            <Table borderless>\r\n              <thead>\r\n                <tr>\r\n                  <th style={headStyle}>{this.state.from}</th>\r\n                  <th style={headStyle}>1.00 {this.state.from}</th>\r\n                  <th style={headStyle}>inv. 1.00 {this.state.from}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td style={tableStyle}>\r\n                    {this.state.currencies.map((cur) => (\r\n                      <tr>{cur}</tr>\r\n                    ))}\r\n                  </td>\r\n                  <td style={tableStyle}>\r\n                    {this.state.currencyrates.map((cur) => (\r\n                      <tr>{cur}</tr>\r\n                    ))}\r\n                  </td>\r\n                  <td style={tableStyle}>\r\n                    {this.state.invcurrencies.map((cur) => (\r\n                      <tr>{cur}</tr>\r\n                    ))}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n          <div className=\"col-lg-6 col-xl-6 histo\">\r\n            <div className=\"historic_row\">\r\n              <div className=\"col-lg-12 col-xl-12\">\r\n                <br></br>\r\n                <center>\r\n                  <h5><label for=\"from\">Choose the currency</label></h5>\r\n                  <select\r\n                    name=\"from\"\r\n                    id=\"from\"\r\n                    onChange={(event) => this.selectHandler(event)}\r\n                    value={this.state.fromCurrency}\r\n                    aria-required=\"true\"\r\n                  >\r\n                    {this.state.currency.map((cur) => (\r\n                      <option key={cur}>{cur}</option>\r\n                    ))}\r\n                  </select>\r\n                  <br></br>\r\n                  <br></br>\r\n                  <h5>Choose the date</h5>\r\n                  <Calendar\r\n                    weekNumbers={true}\r\n                    onChange={this.onChange}\r\n                    value={this.state.date}\r\n                    maxDate={new Date()}\r\n                  />\r\n                  <br></br>\r\n                  <br></br>\r\n                  <button onClick={this.convertHandler} style={buttonstyle}>Go</button>\r\n                  <br></br>\r\n                </center>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <footer class=\"page-footer footer font-small\">\r\n          © 2020 All rights reserved\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Historic;","import React, { useEffect, useState } from \"react\";\r\nimport { Table } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport \"./Rates.css\";\r\n\r\nconst tableStyle = {\r\n  color: \"black\",\r\n};\r\n\r\nconst Rates = (props) => {\r\n  const [currencies, setcurrencies] = useState([]);\r\n  const [currencyrates, setcurrencyrates] = useState([]);\r\n\r\n  useEffect(() => {\r\n\r\n    const getrates = (prop) => {\r\n      const top10 = [\r\n        \"CAD\",\r\n        \"GBP\",\r\n        \"INR\",\r\n        \"CHF\",\r\n        \"EUR\",\r\n        \"MYR\",\r\n        \"CNY\",\r\n        \"USD\",\r\n        \"SGD\",\r\n        \"AUD\",\r\n      ];\r\n      \r\n      axios\r\n        .get(`https://api.exchangeratesapi.io/latest?base=${props.currencyfrom}`)\r\n        .then((response) => {\r\n          const currencyrates = [];\r\n          const currencycountry = [];\r\n          for (const key in response.data.rates) {\r\n            for (var i = 0; i <= 10; i++) {\r\n              if (top10[i] === key) {\r\n                currencycountry.push(key);\r\n                currencyrates.push(response.data.rates[key].toFixed(5));\r\n              }\r\n            }\r\n          }\r\n          setcurrencies(currencycountry);\r\n          setcurrencyrates(currencyrates);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"oops\", err);\r\n        });\r\n    };\r\n\r\n    getrates();\r\n  }, [props.currencyfrom]);\r\n\r\n\r\n  return (\r\n    <div id=\"rates_container\">\r\n      <div id=\"heading6\">Rates Table</div>\r\n      <center>\r\n        <br></br>\r\n        <div id=\"heading7\">Top 10 currencies</div>\r\n      </center>\r\n      <Table responsive>\r\n        <center>\r\n          <thead>\r\n            <tr>\r\n              <th style={tableStyle}>{props.currencyfrom}</th>\r\n              <th style={tableStyle}>1.00 {props.currencyfrom}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td style={tableStyle}>\r\n                {currencies.map((cur) => (\r\n                  <tr>{cur}</tr>\r\n                ))}\r\n              </td>\r\n              <td style={tableStyle}>\r\n                {currencyrates.map((cur) => (\r\n                  <tr>{cur}</tr>\r\n                ))}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </center>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rates;","import React, { Component } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\nimport \"./LineChart.css\";\r\n\r\nexport default class BarChartComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Data: {},\r\n    };\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      prevProps.currencyfrom !== this.props.currencyfrom ||\r\n      prevProps.currencyto !== this.props.currencyto\r\n    ) {\r\n      this.componentDidMount();\r\n    }\r\n  }\r\n\r\n  OneYearClose = () => {\r\n    console.log(\"one year data\");\r\n    axios\r\n      .get(\r\n        `https://www.alphavantage.co/query?function=FX_DAILY&from_symbol=${this.props.currencyfrom}&to_symbol=${this.props.currencyto}&outputsize=full&apikey=AJ2AZ72QK50T17JO`\r\n      )\r\n      .then((response) => {\r\n        var today = new Date();\r\n        var dd = String(today.getDate()).padStart(2, \"0\");\r\n        var mm = String(today.getMonth() + 1).padStart(2, \"0\");\r\n        var yyyy = today.getFullYear();\r\n        let close_rates = [];\r\n        var OneYear = Object.keys(response.data[\"Time Series FX (Daily)\"]);\r\n        var date1 = OneYear.filter(function (obj) {\r\n          var temp = new Date(obj);\r\n          var date2 = temp.getDate();\r\n          var month = temp.getMonth() + 1;\r\n          var year = temp.getFullYear();\r\n          return (\r\n            (date2 <= dd && month <= mm && year == yyyy) ||\r\n            (date2 >= dd && month >= mm && year == yyyy - 1)\r\n          );\r\n        });\r\n\r\n        for (var i = 0; i < date1.length; i++) {\r\n          close_rates.push(\r\n            Object.values(response.data[\"Time Series FX (Daily)\"])[i][\r\n              \"4. close\"\r\n            ]\r\n          );\r\n        }\r\n        this.setState({\r\n          Data: {\r\n            labels: date1,\r\n            datasets: [\r\n              {\r\n                label: \"Closing Rates for the year\",\r\n                data: close_rates,\r\n                fill: true,\r\n                lineTension: 0.1,\r\n                backgroundColor: \"#1C4E80\",\r\n                borderColor: \"#1C4E80\",\r\n                borderCapStyle: \"butt\",\r\n                borderJoinStyle: \"miter\",\r\n                pointBorderColor: \"#1C4E80\",\r\n                pointBackgroundColor: \"#fff\",\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n                pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 2,\r\n                pointHitRadius: 10,\r\n              },\r\n            ],\r\n          },\r\n        });\r\n      });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    console.log(\"one month data\");\r\n    axios\r\n      .get(\r\n        `https://www.alphavantage.co/query?function=FX_DAILY&from_symbol=${this.props.currencyfrom}&to_symbol=${this.props.currencyto}&outputsize=full&apikey=X2DRFB6QVEIV9IXL`\r\n      )\r\n      .then((response) => {\r\n        var today = new Date();\r\n        var dd = String(today.getDate()).padStart(2, \"0\");\r\n\r\n        var mm = String(today.getMonth() + 1).padStart(2, \"0\");\r\n\r\n        var yyyy = today.getFullYear();\r\n\r\n        let close_rates = [];\r\n\r\n        var OneMonth = Object.keys(response.data[\"Time Series FX (Daily)\"]);\r\n\r\n        var date1 = OneMonth.filter(function (obj) {\r\n          var temp = new Date(obj);\r\n          var date2 = temp.getDate();\r\n          var month = temp.getMonth() + 1;\r\n          var year = temp.getFullYear();\r\n\r\n          return (\r\n            (date2 <= dd && month == mm && year == yyyy) ||\r\n            (month == mm - 1 && year == yyyy)\r\n          );\r\n        });\r\n\r\n        console.log(\"data\", date1);\r\n\r\n        for (var i = 0; i < date1.length; i++) {\r\n          close_rates.push(\r\n            Object.values(response.data[\"Time Series FX (Daily)\"])[i][\r\n              \"4. close\"\r\n            ]\r\n          );\r\n        }\r\n        this.setState({\r\n          Data: {\r\n            labels: date1,\r\n            datasets: [\r\n              {\r\n                label: \"Closing Rates for the Month\",\r\n                data: close_rates,\r\n                fill: true,\r\n                lineTension: 0.1,\r\n                backgroundColor: \"#1C4E80\",\r\n                borderColor: \"#1C4E80\",\r\n                borderCapStyle: \"butt\",\r\n                borderJoinStyle: \"miter\",\r\n                pointBorderColor: \"#1C4E80\",\r\n                pointBackgroundColor: \"#fff\",\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n                pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 2,\r\n                pointHitRadius: 10,\r\n              },\r\n            ],\r\n          },\r\n        });\r\n      });\r\n  };\r\n\r\n  OneWeekClose = () => {\r\n    console.log(\"1 week close data\");\r\n    axios\r\n      .get(\r\n        `https://www.alphavantage.co/query?function=FX_DAILY&from_symbol=${this.props.currencyfrom}&to_symbol=${this.props.currencyto}&apikey=B9ZVAB9VTJOSUOMD`\r\n      )\r\n      .then((response) => {\r\n        const data = response.data[\"Time Series FX (Daily)\"];\r\n        let dates = [];\r\n        let close_rate = [];\r\n        for (var i = 0; i <= 5; i++) {\r\n          dates.push(Object.keys(response.data[\"Time Series FX (Daily)\"])[i]);\r\n          close_rate.push(\r\n            Object.values(response.data[\"Time Series FX (Daily)\"])[i][\r\n              \"4. close\"\r\n            ]\r\n          );\r\n        }\r\n        this.setState({\r\n          Data: {\r\n            labels: dates,\r\n            datasets: [\r\n              {\r\n                label: \"Closing Rate for the week\",\r\n                data: close_rate,\r\n                fill: true,\r\n                lineTension: 0.1,\r\n                backgroundColor: \"#1C4E80\",\r\n                borderColor: \"#1C4E80\",\r\n                borderCapStyle: \"butt\",\r\n                borderJoinStyle: \"miter\",\r\n                pointBorderColor: \"#1C4E80\",\r\n                pointBackgroundColor: \"#fff\",\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n                pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 2,\r\n                pointHitRadius: 10,\r\n              },\r\n            ],\r\n          },\r\n        });\r\n      });\r\n  };\r\n  OnedayClose = () => {\r\n    axios\r\n      .get(\r\n        `https://www.alphavantage.co/query?function=FX_INTRADAY&from_symbol=${this.props.currencyfrom}&to_symbol=${this.props.currencyto}&interval=5min&apikey=679CLZ1DX7EOQLX0`\r\n      )\r\n      .then((response) => {\r\n        var close_rates = [];\r\n        var dates = [];\r\n        console.log(\"load data for the day\");\r\n        console.log(response.data[\"Time Series FX (5min)\"]);\r\n        const data = response.data[\"Time Series FX (5min)\"];\r\n        const Oneday_date = Object.keys(\r\n          response.data[\"Time Series FX (5min)\"]\r\n        );\r\n\r\n        var date1 = Oneday_date.filter(function (obj) {\r\n          var temp = new Date(obj);\r\n\r\n          var date2 = temp.getDate();\r\n\r\n          var today = new Date().getDate();\r\n\r\n          return date2 == today;\r\n        });\r\n\r\n        for (var i = 0; i < date1.length; i++) {\r\n          close_rates.push(\r\n            Object.values(response.data[\"Time Series FX (5min)\"])[i][\r\n              \"4. close\"\r\n            ]\r\n          );\r\n        }\r\n\r\n        this.setState({\r\n          Data: {\r\n            labels: date1,\r\n            datasets: [\r\n              {\r\n                label: \"Closing Rates for the day\",\r\n                data: close_rates,\r\n                fill: true,\r\n                lineTension: 0.1,\r\n                backgroundColor: \"#1C4E80\",\r\n                borderColor: \"#1C4E80\",\r\n                borderCapStyle: \"butt\",\r\n                borderJoinStyle: \"miter\",\r\n                pointBorderColor: \"#1C4E80\",\r\n                pointBackgroundColor: \"#fff\",\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n                pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 2,\r\n                pointHitRadius: 10,\r\n              },\r\n            ],\r\n          },\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"chart_container\">\r\n          <div id=\"heading3\">\r\n            {this.props.currencyfrom} to {this.props.currencyto}\r\n          </div>\r\n          <Line\r\n            data={this.state.Data}\r\n            options={{\r\n              responsive: true,\r\n\r\n              scales: {\r\n                xAxes: [\r\n                  {\r\n                    display: false,\r\n                  },\r\n                ],\r\n                yAxes: [\r\n                  {\r\n                    display: true,\r\n                  },\r\n                ],\r\n              },\r\n              legend: {\r\n                labels: {\r\n                  fontColor: \"black\",\r\n                  fontSize: 12,\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n        <div id=\"button_wrapper\">\r\n          <button name=\"1day\" className=\"butn\" onClick={this.OnedayClose}>\r\n            1 D\r\n          </button>\r\n\r\n          <button name=\"1month\" className=\"butn\" onClick={this.OneWeekClose}>\r\n            1 W\r\n          </button>\r\n\r\n          <button name=\"6months\" className=\"butn\" onClick={this.componentDidMount}>\r\n            1 M\r\n          </button>\r\n\r\n          <button name=\"1year\" className=\"butn\" onClick={this.OneYearClose}>\r\n            1 Y\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport \"./BarGraph.css\";\r\n\r\nvar today = new Date();\r\nvar yyyy = today.getFullYear();\r\n\r\nclass BarGraph extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Data: {},\r\n      years: [],\r\n      foryear: yyyy,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      prevProps.currencyfrom !== this.props.currencyfrom ||\r\n      prevProps.currencyto !== this.props.currencyto\r\n    ) {\r\n      this.componentDidMount();\r\n      this.setState({ foryear: today.getFullYear()});\r\n    }\r\n  }\r\n  componentDidMount = () => {\r\n    axios\r\n      .get(\r\n        `https://www.alphavantage.co/query?function=FX_MONTHLY&from_symbol=${this.props.currencyfrom}&to_symbol=${this.props.currencyto}&apikey=679CLZ1DX7EOQLX0`\r\n      )\r\n      .then((response) => {\r\n        let close_rates = [];\r\n        let Nyears = [];\r\n        let distinctyears = [];\r\n        var months = Object.keys(response.data[\"Time Series FX (Monthly)\"]);\r\n        for (var i in months) {\r\n          var temp = new Date(months[i]);\r\n          var year = temp.getFullYear();\r\n          Nyears.push(year);\r\n          distinctyears = [...new Set(Nyears)];\r\n        }\r\n\r\n        this.setState({ years: distinctyears });\r\n        var date1 = months.filter(function (obj) {\r\n          var temp = new Date(obj);\r\n          var year = temp.getFullYear();\r\n          return year == yyyy;\r\n        });\r\n\r\n        for (var i = 0; i < date1.length; i++) {\r\n          close_rates.push(\r\n            Object.values(response.data[\"Time Series FX (Monthly)\"])[i][\r\n              \"4. close\"\r\n            ]\r\n          );\r\n        }\r\n\r\n        this.setState({\r\n          Data: {\r\n            labels: date1.map(function (obj) {\r\n              var temp = new Date(obj);\r\n              var months = temp.toLocaleString(\"en-US\", { month: \"short\" });\r\n              return months;\r\n            }),\r\n            datasets: [\r\n              {\r\n                label: `${this.props.currencyto} per 1 ${this.props.currencyfrom}`,\r\n                data: close_rates,\r\n                backgroundColor: \"#1C4E80\",\r\n                hoverBackgroundColor: \"#A5D8DD\",\r\n                borderWidth: 2,\r\n              },\r\n            ],\r\n          },\r\n        });\r\n      });\r\n  };\r\n\r\n  selectHandler = (event) => {\r\n    if (event.target.name === \"year\") {\r\n      this.setState({ foryear: event.target.value });\r\n    }\r\n  };\r\n\r\n  convertHandler = () => {\r\n    axios\r\n      .get(\r\n        `https://www.alphavantage.co/query?function=FX_MONTHLY&from_symbol=${this.props.currencyfrom}&to_symbol=${this.props.currencyto}&apikey=787GW6OSVREOIQAA`\r\n      )\r\n      .then((response) => {\r\n        let close_rates = [];\r\n        let cyear = this.state.foryear;\r\n        let object = response.data[\"Time Series FX (Monthly)\"];\r\n        for (const property in object) {\r\n          var temp = new Date(property);\r\n          var year = temp.getFullYear();\r\n          if (year == cyear) {\r\n            close_rates.push(`${object[property][\"4. close\"]}`);\r\n          }\r\n        }\r\n        console.log(close_rates);\r\n        var months = Object.keys(response.data[\"Time Series FX (Monthly)\"]);\r\n        var date1 = months.filter(function (obj) {\r\n          var temp = new Date(obj);\r\n          var year = temp.getFullYear();\r\n          return year == cyear;\r\n        });\r\n\r\n        this.setState({\r\n          Data: {\r\n            labels: date1.map(function (obj) {\r\n              var temp = new Date(obj);\r\n              var months = temp.toLocaleString(\"en-US\", { month: \"short\" });\r\n              return months;\r\n            }),\r\n            datasets: [\r\n              {\r\n                label: `${this.props.currencyto} per 1 ${this.props.currencyfrom}`,\r\n                data: close_rates,\r\n                backgroundColor: \"#1C4E80\",\r\n                hoverBackgroundColor: \"#A5D8DD\",\r\n                borderWidth: 2,\r\n              },\r\n            ],\r\n          },\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"Barchart_container\">\r\n          <div id=\"heading5\">Monthly Closing Rates</div>\r\n          <div id=\"select_wrapper\">\r\n            <span>\r\n              <select\r\n                style={{ width: \"80px\", height: \"35px\" }}\r\n                name=\"year\"\r\n                aria-label=\"Select year\"\r\n                onChange={(event) => this.selectHandler(event)}\r\n                value={this.state.foryear}\r\n              >\r\n                {this.state.years.map((cur) => (\r\n                  <option key={cur}>{cur}</option>\r\n                ))}\r\n              </select>\r\n            </span>\r\n            <span>\r\n              <button id=\"butn1\" onClick={this.convertHandler}>\r\n                Go\r\n              </button>\r\n            </span>\r\n          </div>\r\n\r\n          <Bar\r\n            data={this.state.Data}\r\n            width={50}\r\n            height={50}\r\n            options={{\r\n              responsive: true,\r\n\r\n              scales: {\r\n                xAxes: [\r\n                  {\r\n                    display: true,\r\n                    gridLines: {\r\n                      offsetGridLines: true,\r\n                    },\r\n                  },\r\n                ],\r\n                yAxes: [\r\n                  {\r\n                    display: true,\r\n                  },\r\n                ],\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BarGraph;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport \"./BarGraph.css\";\r\n\r\nvar today = new Date();\r\nvar yyyy = today.getFullYear();\r\n\r\nclass OpenChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Data: {},\r\n      years: [],\r\n      foryear: yyyy,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      prevProps.currencyfrom !== this.props.currencyfrom ||\r\n      prevProps.currencyto !== this.props.currencyto\r\n    ) {\r\n      this.componentDidMount();\r\n      this.setState({ foryear: today.getFullYear()});\r\n    }\r\n  }\r\n  componentDidMount = () => {\r\n    axios\r\n      .get(\r\n        `https://www.alphavantage.co/query?function=FX_MONTHLY&from_symbol=${this.props.currencyfrom}&to_symbol=${this.props.currencyto}&apikey=UWQQMI1ZK12PFDJO`\r\n      )\r\n      .then((response) => {\r\n        let open_rates = [];\r\n        let Nyears = [];\r\n        let distinctyears = [];\r\n        var months = Object.keys(response.data[\"Time Series FX (Monthly)\"]);\r\n        for (var i in months) {\r\n          var temp = new Date(months[i]);\r\n          var year = temp.getFullYear();\r\n          Nyears.push(year);\r\n          distinctyears = [...new Set(Nyears)];\r\n        }\r\n\r\n        this.setState({ years: distinctyears });\r\n        var date1 = months.filter(function (obj) {\r\n          var temp = new Date(obj);\r\n          var year = temp.getFullYear();\r\n          return year == yyyy;\r\n        });\r\n\r\n        for (var i = 0; i < date1.length; i++) {\r\n          open_rates.push(\r\n            Object.values(response.data[\"Time Series FX (Monthly)\"])[i][\r\n              \"1. open\"\r\n            ]\r\n          );\r\n        }\r\n\r\n        this.setState({\r\n          Data: {\r\n            labels: date1.map(function (obj) {\r\n              var temp = new Date(obj);\r\n              var months = temp.toLocaleString(\"en-US\", { month: \"short\" });\r\n              return months;\r\n            }),\r\n            datasets: [\r\n              {\r\n                label: `${this.props.currencyto} per 1 ${this.props.currencyfrom}`,\r\n                data: open_rates,\r\n                backgroundColor: \"#1C4E80\",\r\n                hoverBackgroundColor: \"#A5D8DD\",\r\n                borderWidth: 2,\r\n              },\r\n            ],\r\n          },\r\n        });\r\n      });\r\n  };\r\n\r\n  selectHandler = (event) => {\r\n    if (event.target.name === \"year\") {\r\n      this.setState({ foryear: event.target.value });\r\n    }\r\n  };\r\n\r\n  convertHandler = () => {\r\n    axios\r\n      .get(\r\n        `https://www.alphavantage.co/query?function=FX_MONTHLY&from_symbol=${this.props.currencyfrom}&to_symbol=${this.props.currencyto}&apikey=B9ZVAB9VTJOSUOMD`\r\n      )\r\n      .then((response) => {\r\n        let open_rates = [];\r\n        let cyear = this.state.foryear;\r\n        let object = response.data[\"Time Series FX (Monthly)\"];\r\n        for (const property in object) {\r\n          var temp = new Date(property);\r\n          var year = temp.getFullYear();\r\n          if (year == cyear) {\r\n            open_rates.push(`${object[property][\"1. open\"]}`);\r\n          }\r\n        }\r\n        console.log(open_rates);\r\n        var months = Object.keys(response.data[\"Time Series FX (Monthly)\"]);\r\n        var date1 = months.filter(function (obj) {\r\n          var temp = new Date(obj);\r\n          var year = temp.getFullYear();\r\n          return year == cyear;\r\n        });\r\n\r\n        this.setState({\r\n         \r\n          Data: {\r\n            labels: date1.map(function (obj) {\r\n              var temp = new Date(obj);\r\n              var months = temp.toLocaleString(\"en-US\", { month: \"short\" });\r\n              return months;\r\n            }),\r\n            datasets: [\r\n              {\r\n                label: `${this.props.currencyto} per 1 ${this.props.currencyfrom}`,\r\n                data: open_rates,\r\n                backgroundColor: \"#1C4E80\",\r\n                hoverBackgroundColor: \"#A5D8DD\",\r\n                borderWidth: 2,\r\n              },\r\n            ],\r\n          },\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"Barchart_container\">\r\n          <div id=\"heading4\">Monthly Opening Rates</div>\r\n          <div id=\"select_wrapper1\">\r\n            <span>\r\n              <select\r\n                style={{ width: \"80px\", height: \"35px\" }}\r\n                name=\"year\"\r\n                aria-label=\"Select year\"\r\n                onChange={(event) => this.selectHandler(event)}\r\n                value={this.state.foryear}\r\n              >\r\n                {this.state.years.map((cur) => (\r\n                  <option key={cur}>{cur}</option>\r\n                ))}\r\n              </select>\r\n            </span>\r\n            <span>\r\n              <button id=\"butn2\" onClick={this.convertHandler}>\r\n                Go\r\n              </button>\r\n            </span>\r\n          </div>\r\n\r\n          <Bar \r\n            data={this.state.Data}\r\n            width={50}\r\n            height={50}\r\n            options={{responsive: true, \r\n              \r\n          \r\n              responsive: true,\r\n\r\n              scales: {\r\n                xAxes: [\r\n                  {\r\n                    display: true,\r\n                    gridLines: {\r\n                      offsetGridLines: true,\r\n                    },\r\n                  },\r\n                ],\r\n                yAxes: [\r\n                  {\r\n                    display: true,\r\n                  },\r\n                ],\r\n              },\r\n          \r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpenChart;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\";\r\nimport Rates from \"./components/Rates\";\r\nimport LineChart from \"./components/LineChart\";\r\nimport BarGraph from \"./components/BarGraph\";\r\nimport OpenChart from \"./components/OpenChart\";\r\nimport \"./Converter.css\";\r\n\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      result: null,\r\n      fromCurrency: \"USD\",\r\n      toCurrency: \"INR\",\r\n      amount: 1,\r\n      currencies: [],\r\n      from: \"USD\",\r\n      to: \"INR\",\r\n      currency_names: [],\r\n    };\r\n  }\r\n \r\n  componentDidMount() {\r\n    axios\r\n      .get(\"https://api.exchangeratesapi.io/latest\")\r\n      .then((response) => {\r\n        var amt = 1;\r\n        const currencyAr = [\"EUR\"];\r\n        var rate;\r\n        var invrate;\r\n        for (const key in response.data.rates) {\r\n          currencyAr.push(key);\r\n        }\r\n        axios\r\n          .get(\r\n            `https://api.exchangeratesapi.io/latest?base=${this.state.fromCurrency}`\r\n          )\r\n          .then((response) => {\r\n            amt = response.data.rates[this.state.toCurrency].toFixed(5);\r\n            rate = response.data.rates[this.state.toCurrency].toFixed(5);\r\n            axios\r\n              .get(\r\n                `https://api.exchangeratesapi.io/latest?base=${this.state.toCurrency}&symbols=${this.state.fromCurrency}`\r\n              )\r\n              .then((response) => {\r\n                invrate = response.data.rates[this.state.fromCurrency].toFixed(5);\r\n                this.setState({ cinvrate: invrate });\r\n              });\r\n            this.setState({ result: amt });\r\n            this.setState({ crate: rate });\r\n          });\r\n        this.setState({ currencies: currencyAr });\r\n      })\r\n      /**axios\r\n      .get('https://financialmodelingprep.com/api/v3/quotes/forex?apikey=992f0505ea9b957539c47ce38e501c6a')\r\n      .then((response) => { \r\n        var names =[];\r\n        for (var i=0;i<10;i++){\r\n                names.push(response.data[i]);\r\n        }\r\n        this.setState({ currency_names: names });\r\n      })**/\r\n     \r\n      .catch((err) => {\r\n        console.log(\"oops\", err);\r\n      });\r\n  }\r\n\r\n  convertHandler = () => {\r\n    if (this.state.fromCurrency !== this.state.toCurrency) {\r\n      axios\r\n        .get(\r\n          `https://api.exchangeratesapi.io/latest?base=${this.state.fromCurrency}&symbols=${this.state.toCurrency}`\r\n        )\r\n        .then((response) => {\r\n          const result =\r\n            this.state.amount * response.data.rates[this.state.toCurrency];\r\n          this.setState({ result: result.toFixed(5) });\r\n          var rate;\r\n          var invrate;\r\n          rate = response.data.rates[this.state.toCurrency].toFixed(5);\r\n          axios\r\n            .get(\r\n              `https://api.exchangeratesapi.io/latest?base=${this.state.toCurrency}&symbols=${this.state.fromCurrency}`\r\n            )\r\n            .then((response) => {\r\n              invrate = response.data.rates[this.state.fromCurrency].toFixed(5);\r\n              this.setState({ cinvrate: invrate });\r\n            });\r\n          this.setState({ crate: rate });\r\n          this.setState({ from: this.state.fromCurrency });\r\n          this.setState({ to: this.state.toCurrency });\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Oops\", error.message);\r\n        });\r\n    } else {\r\n      this.setState({ result: \"You cant convert the same currency!\" });\r\n    }\r\n  };\r\n\r\n  selectHandler = (event) => {\r\n    if (event.target.name === \"from\") {\r\n      this.setState({ fromCurrency: event.target.value });\r\n    } else {\r\n      if (event.target.name === \"to\") {\r\n        this.setState({ toCurrency: event.target.value });\r\n      }\r\n    }\r\n  };\r\n \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\" role=\"main\">\r\n        \r\n        <div className=\"row\">\r\n    \r\n          <div className=\"col-lg-4 col-xl-4\">\r\n            <div id=\"Converter\">\r\n              <div id=\"heading\">\r\n                Currency Converter\r\n                <span role=\"img\" aria-label=\"money\">\r\n                  &#x1f4b5;\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <label for=\"amount\">Amount </label>\r\n                <br></br>\r\n                <input\r\n                  style={{ width: \"200px\" }}\r\n                  name=\"amount\"\r\n                  id=\"amount\"\r\n                  type=\"text\"\r\n                  value={this.state.amount}\r\n                  onChange={(event) =>\r\n                    this.setState({ amount: event.target.value })\r\n                  }\r\n                />\r\n                <br></br>\r\n              </div>\r\n              <div>\r\n                <br></br>\r\n                <select\r\n                  style={{ width: \"200px\" }}\r\n                  name=\"from\"\r\n                  aria-label=\"From Currency\"\r\n                  onChange={(event) => this.selectHandler(event)}\r\n                  value={this.state.fromCurrency}\r\n                >\r\n                  {this.state.currencies.map((cur) => (\r\n                    <option key={cur}>{cur}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div>\r\n                <div role=\"img\" aria-label=\"down-arrow\">\r\n                  {\" \"}\r\n                  &#x21d3;{\" \"}\r\n                </div>\r\n                <select\r\n                  style={{ width: \"200px\" }}\r\n                  name=\"to\"\r\n                  aria-label=\"To Currency\"\r\n                  onChange={(event) => this.selectHandler(event)}\r\n                  value={this.state.toCurrency}\r\n                >\r\n                  {this.state.currencies.map((cur) => (\r\n                    <option key={cur}>{cur}</option>\r\n                  ))}\r\n                </select>\r\n                <br></br>\r\n              </div>\r\n              <button onClick={this.convertHandler} id=\"convertbutton\">\r\n                Convert\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-3 col-xl-3\">\r\n            <div id=\"conversion_results\">\r\n              <div id=\"heading2\">Calculation Results</div>\r\n              <br></br>\r\n              <center>\r\n                <div id=\"result\">\r\n                  <span>{this.state.amount} </span>\r\n                  <span>{this.state.from} = </span>\r\n                  <span>{<h3>{this.state.result}</h3>}</span>\r\n                  <span>{this.state.to} </span>\r\n                </div>\r\n                <br></br>\r\n                <br></br>\r\n                <span> 1 {this.state.from} = </span>\r\n                <span> {this.state.crate} </span>\r\n                <span> {this.state.to} </span>\r\n                <br></br>\r\n                <span> 1 {this.state.to} = </span>\r\n                <span> {this.state.cinvrate} </span>\r\n                <span> {this.state.from} </span>\r\n              </center>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-5 col-xl-5\">\r\n            <LineChart\r\n              currencyfrom={this.state.fromCurrency}\r\n              currencyto={this.state.toCurrency}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4 col-xl-4\">\r\n            <Rates currencyfrom={this.state.fromCurrency} />\r\n            <br></br>\r\n          </div>\r\n          <div className=\"col-lg-4 col-xl-4\">\r\n            <OpenChart\r\n              currencyfrom={this.state.fromCurrency}\r\n              currencyto={this.state.toCurrency}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-4 col-xl-4\">\r\n            <BarGraph\r\n              currencyfrom={this.state.fromCurrency}\r\n              currencyto={this.state.toCurrency}\r\n            />\r\n            <br></br>\r\n          </div>\r\n        </div>\r\n        <footer class=\"page-footer footer font-small\" role=\"contentinfo\">\r\n          © 2020 All rights reserved\r\n        </footer>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Navigation from \"./Navigation\";\r\nimport Ratespage from \"./Ratespage\";\r\nimport Historic from \"./Historic\";\r\nimport \"./Converter.css\";\r\nimport Home from \"./Home\";\r\n\r\n\r\nclass App extends Component {\r\n    \r\n  render(){\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/Ratespage\" component={Ratespage} />\r\n        <Route path=\"/Historic\" component={Historic} />\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import \"bootstrap/dist/css/bootstrap.css\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { HashRouter as Router} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n    </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}